%% Name: Sam Wallace
%% Date: 7/14/2022
%  Description: This program will compute the evaporation for each day in mm/day. It will
%%take inputs from weather data into a function that can then calculate the
%%evaporation.


%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
    %
%    Workbook: C:\Users\sammy\Downloads\wd_CLIN.xlsx
%    Worksheet: Worksheet
%
% Auto-generated by MATLAB on 03-Aug-2022 15:56:18

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 18);

% Specify sheet and range
opts.Sheet = "Worksheet";
opts.DataRange = "A14:R1839";

% Specify column names and types
opts.VariableNames = ["Date", "AverageAirTemperatureF", "avg_Tc", "MaximumAirTemperatureF", "max_Tc", "MinimumAirTemperatureF", "min_Tc", "avg_rh", "max_rh", "min_rh", "precip_in", "avg_sol", "AverageWindSpeedmph", "avg_ws", "MaximumWindSpeedmph", "max_ws", "MinimumWindSpeedmph", "min_ws"];
opts.VariableTypes = ["string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify variable properties
opts = setvaropts(opts, "Date", "WhitespaceRule", "preserve");
opts = setvaropts(opts, "Date", "EmptyFieldRule", "auto");

% Import the data
wd_CLIN = readtable("C:\Users\sammy\Downloads\wd_CLIN.xlsx", opts, "UseExcel", false);


%% Clear temporary variables
clear opts

% Find the mean daily temperature
z = zeros(height(wd_CLIN),1); % CLIN: abbreviation for Clinton (a city in SE NC where the weather station resides)


## here just iterate through all the rows and get avg of
for i = 1:height(wd_CLIN.avg_Tc)
z(i) = tmean(wd_CLIN.min_Tc(i) , wd_CLIN.max_Tc(i));
end

%Find delta

dd = zeros(height(wd_CLIN),1);

for i = 1:height(wd_CLIN.avg_Tc)
dd(i) = del(z(i));
end

%Find ea

e_a = zeros(height(wd_CLIN),1);

for i = 1:height(wd_CLIN.avg_Tc)
e_a(i) = ea(wd_CLIN.min_Tc(i) , wd_CLIN.max_Tc(i) , wd_CLIN.min_rh(i) , wd_CLIN.max_rh(i));
end

%Find es

eas = zeros(height(wd_CLIN),1);

for i = 1:height(wd_CLIN.avg_Tc)
eas(i) = es(wd_CLIN.min_Tc(i) , wd_CLIN.max_Tc(i));
end

%Find rn

r_n = zeros(height(wd_CLIN),1);

for i = 1:height(wd_CLIN.avg_Tc)
r_n(i) = rnet(wd_CLIN.avg_sol(i));
end

%Find wind speed at 2 meters

u_2 = zeros(height(wd_CLIN),1);

for i = 1:height(wd_CLIN.avg_Tc)

u_2(i) = ws(wd_CLIN.avg_ws(i));
end

%Find air density
ra = zeros(height(wd_CLIN),1);
for i = 1:height(wd_CLIN.avg_Tc)
ra(i) = rho_a(z(i));
end


%Finding evaporation amount
ev = zeros(height(wd_CLIN),1);

for i = 1:height(wd_CLIN.avg_Tc)
ev(i) = evap(dd(i) , eas(i) , e_a(i) , ra(i) , r_n(i) , u_2(i));
end
% The next section will include the function for calculating evaporation


%%

function y = evap(d,eas,ea,ra,rn,u)

%constants
lv = 2450000; rho_w = 997; p = 101325; z0 = 0.00002; z2 = 10; k = 0.4; gam = 67.4;
del1 = 4098; del2 = 0.6108; del3 = 17.27; del4 = 237.3;
u1 = 4.87; u2 = 67.8; u3 = 5.42;
e_const = 0.622; e_mult = 8.64e+7;
r = 287.5;
rad_a = 0.65; rad_b = -0.85;
%units and def. to be commented in

y = e_mult*((1/(d+gam))*(((rn*d)/(lv*rho_w))+((e_const*(k^2)*ra*u*gam)/(p*rho_w*(log(z2/z0)^2)))*(eas-ea)));

end

%Function finds mean temperature
function tca = tmean(tmin,tmax)

tca = (tmin + tmax)/2;
end

%Function for finding delta
    function d = del(tca)
del1 = 4098; del2 = 0.6108; del3 = 17.27; del4 = 237.3;

d = 1000*(del1*del2*exp((del3*tca)/(tca+del4)))/((tca+del4)^2);
end
%Function for finding eas
    function e1 = es(tmin,tmax)
del1 = 4098; del2 = 0.6108; del3 = 17.27; del4 = 237.3;
e1 = 1000*((del2*exp((del3*tmax)/(tmax+del4))+(del2*exp((del3*tmin)/(tmin+del4))))/2);
end
%Function for finding ea
    function e2 = ea(tmin,tmax,rhmin,rhmax)
del1 = 4098; del2 = 0.6108; del3 = 17.27; del4 = 237.3;
e2 = 1000*(((del2*exp((del3*tmax)/(tmax+del4)))*(rhmin/100)+(del2*exp((del3*tmin)/(tmin+del4)))*(rhmax/100))/2);
end

%Function to find air density
function raa = rho_a(tca)
p = 101325 ; r = 287.5;
raa = (p)/(r*(tca+273));
end

%Function to find net radiation
function rn = rnet(rs)

rad_a = 0.65; rad_b = -0.85;
rn = rad_a*rs + rad_b;
end

%Function to find wind speed at 2 meters
function w = ws(uz)
u1 = 4.87; u2 = 67.8; u3 = 5.42 ; z2 = 10 ;
w = uz*(u1/log(u2*z2-u3));
end


